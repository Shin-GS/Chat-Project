package com.chat.server.common.code;

import lombok.AllArgsConstructor;
import lombok.Getter;
import org.springframework.http.HttpStatus;

@AllArgsConstructor
@Getter
public enum ErrorCode implements Code {
    INTERNAL_SERVER_ERROR(HttpStatus.INTERNAL_SERVER_ERROR),

    // Domain
    ENTITY_DELETE_FORBIDDEN(HttpStatus.BAD_REQUEST),

    // Request
    UNAUTHORIZED(HttpStatus.UNAUTHORIZED),

    // User
    USER_NOT_EXISTS(HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD(HttpStatus.BAD_REQUEST),
    USER_ALREADY_EXISTS(HttpStatus.BAD_REQUEST),
    USER_SAVE_FAILED(HttpStatus.BAD_REQUEST),

    // Token
    TOKEN_EMPTY(HttpStatus.BAD_REQUEST),
    TOKEN_INVALID(HttpStatus.BAD_REQUEST),
    TOKEN_EXPIRED(HttpStatus.BAD_REQUEST),
    TOKEN_NOT_EXPIRED(HttpStatus.BAD_REQUEST),

    // Conversation
    CONVERSATION_NOT_EXISTS(HttpStatus.BAD_REQUEST),
    CONVERSATION_REQUEST_INVALID(HttpStatus.BAD_REQUEST),
    CONVERSATION_FRIEND_ALREADY_EXISTS(HttpStatus.BAD_REQUEST),
    CONVERSATION_FRIEND_NOT_EXISTS(HttpStatus.BAD_REQUEST),
    CONVERSATION_GROUP_NOT_EXISTS(HttpStatus.BAD_REQUEST),
    CONVERSATION_NOT_GROUP(HttpStatus.BAD_REQUEST),
    CONVERSATION_ALREADY_JOINED(HttpStatus.BAD_REQUEST),
    CONVERSATION_NOT_MEMBER(HttpStatus.BAD_REQUEST),
    CONVERSATION_TYPE_NOT_SUPPORTED(HttpStatus.BAD_REQUEST),
    CONVERSATION_NAME_REQUIRED(HttpStatus.BAD_REQUEST),
    CONVERSATION_SUPER_ADMIN_REQUIRED(HttpStatus.BAD_REQUEST),
    CONVERSATION_NOT_JOINED(HttpStatus.BAD_REQUEST),
    CONVERSATION_GROUP_ONLY_ALLOWED(HttpStatus.BAD_REQUEST),
    CONVERSATION_ONE_TO_ONE_ONLY_ALLOWED(HttpStatus.BAD_REQUEST),
    CONVERSATION_IS_HIDDEN(HttpStatus.BAD_REQUEST),
    CONVERSATION_JOIN_CODE_IS_INVALID(HttpStatus.BAD_REQUEST),
    CONVERSATION_ROLE_ALREADY_EXISTS(HttpStatus.BAD_REQUEST),
    CONVERSATION_PARTICIPANT_NOT_EXISTS(HttpStatus.BAD_REQUEST),

    // File
    FILE_EMPTY(HttpStatus.BAD_REQUEST),
    FILE_TOO_LARGE(HttpStatus.PAYLOAD_TOO_LARGE),
    FILE_EXTENSION_MISSING(HttpStatus.BAD_REQUEST),
    FILE_EXTENSION_NOT_ALLOWED(HttpStatus.BAD_REQUEST),
    FILE_STORE_FAILED(HttpStatus.INTERNAL_SERVER_ERROR),
    UPLOAD_DIR_CREATE_FAILED(HttpStatus.INTERNAL_SERVER_ERROR),

    // Sticker
    STICKER_NOT_EXISTS(HttpStatus.BAD_REQUEST),
    ;

    private final HttpStatus httpStatus;
}
